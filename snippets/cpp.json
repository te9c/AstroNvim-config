{
    "setup": {
        "prefix": ["setup", "init"],
        "body": [
            "#include <bits/stdc++.h>",
            "",
            "using ll = long long;",
            "using ld = long double;",
            "using ull = unsigned long long int;",
            "#define forf(i, m, n) for(int i = m; i <= n; i++)",
            "#define forb(i, m, n) for(int i = m; i >= n; i--)",
            "#define pb push_back",
            "#define all(x) (x).begin(), (x).end()",
            "",
            "using namespace std;",
            "",
            "inline int gcd(int a, int b) {",
            "    for (; b > 0; a %= b, swap(a, b)) {}",
            "    return a;",
            "}",
            "",
            "void sol() {",
            "    $1",
            "}",
            "",
            "signed main() {",
            "    ios_base::sync_with_stdio(0);",
            "    cin.tie(nullptr);",
            "    cout.tie(nullptr);",
            "    int t;",
            "    cin >> t;",
            "",
            "    for (int i = 0; i < t; i++) {",
            "      sol();",
            "    }",
            "",
            "}"
        ]
    },
    "setupatcoder": {
        "prefix": ["atcoder"],
        "body": [
            "#include <bits/stdc++.h>",
            "",
            "using ll = long long;",
            "using ld = long double;",
            "using ull = unsigned long long int;",
            "#define forf(i, m, n) for(int i = m; i <= n; i++)",
            "#define forb(i, m, n) for(int i = m; i >= n; i--)",
            "#define pb push_back",
            "#define all(x) (x).begin(), (x).end()",
            "",
            "using namespace std;",
            "",
            "inline int gcd(int a, int b) {",
            "    for (; b > 0; a %= b, swap(a, b)) {}",
            "    return a;",
            "}",
            "",
            "signed main() {",
            "    ios_base::sync_with_stdio(0);",
            "    cin.tie(nullptr);",
            "    cout.tie(nullptr);",
            "",
            "    $1",
            "}"
        ]
    }
}
